import os
import openai
import gradio as gr

openai.api_key = os.getenv("OPENAI_API_KEY")

def generate_post(topic):
    prompt = f"–ù–∞–ø–∏—à–∏ –ø–æ—Å—Ç –¥–ª—è Telegram-–±–ª–æ–≥–∞ –Ω–∞ —Ç–µ–º—É: {topic}. –°—Ç—Ä—É–∫—Ç—É—Ä–∞: –∑–∞–≥–æ–ª–æ–≤–æ–∫, –∫—Ä–∞—Ç–∫–∏–π –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫, –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç. –ò—Å–ø–æ–ª—å–∑—É–π –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π —Ç–æ–Ω –∏ —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã."
    try:
        response = openai.chat.completions.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": "–¢—ã –æ–ø—ã—Ç–Ω—ã–π –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä, —Å–æ–∑–¥–∞—é—â–∏–π –ø–æ—Å—Ç—ã –¥–ª—è Telegram-–±–ª–æ–≥–∞."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.7,
            max_tokens=1000
        )
        return response.choices[0].message.content
    except Exception as e:
        return f"–û—à–∏–±–∫–∞: {e}"

iface = gr.Interface(
    fn=generate_post,
    inputs=gr.Textbox(label="–¢–µ–º–∞ –ø–æ—Å—Ç–∞"),
    outputs=gr.Textbox(label="–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç"),
    title="üìù –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–æ—Å—Ç–æ–≤ –¥–ª—è Telegram",
    description="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É ‚Äî –ø–æ–ª—É—á–∏—Ç–µ –ø–æ—Å—Ç, –≥–æ—Ç–æ–≤—ã–π –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏."
)

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 10000))
    iface.launch(server_name="0.0.0.0", server_port=port)